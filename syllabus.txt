C++ Seminar
I will be offering a one-hour-per-week seminar on "advanced" C++ during the Spring 2012 quarter. It will be as the course CS290 (directed studies) in order to be able to reserve a room. The only work will be filling out a survey at the end of the course. Please attend, even if only as a auditor. You don't need to worry about signing up; I'll explain on the first seminar.

The course has been scheduled:

    Wednesdays from 5pm - 6pm in Chung Hall, room 139


The first meeting will be on April 4th (10 total seminars with the last on June 6th). If this conflicts with something else in your schedule, I apologize. There is no time that will satisfy everyone's constraints, and classroom space on campus is scarse.

C++ usage has changed drastically over the past ten years with much more advanced use of templates, meta-programming, functors, and other high-level concepts becoming common. Last year, a new C++ standard (C++11, formerly C++0x) was released with many new and exciting changes to the language that follow these trends. Each week's seminar will be relatively self-contained and have "live programming" examples to illustrate C++11 and new ways of using C++. It should be fun and interactive. If you'd like to learn more about C++, I hope you attend.

Current (still tentative) topics:
General notes on C++ examples
Week	Date	Topic	Files
1	Apr 4	C++11 overview, easy useful changes: >>, nullptr, std::array, range-based for, auto, decltype, begin & end 	Original C++03 simpmat version, C++11 simpmat version, Final C++11 simpmat version, C++11 auto keyword examples, C++11 range-based for examples
2	Apr 11	move semantics: r-value references, move constructor / operator=, use in STL
3	Apr 18	Prefer direct obj to ptrs, shared_ptr, unique_ptr, weak_ptr
4	Apr 25	functors, lambda functions, currying, closures
5	May 2	More on constructors: compiler-made constructors/destructors/assignments, initializer lists, deligation, inheriting, =default, =delete
6	May 9	STL: hash tables, timers, random, regex, unicode, use with functors/lambda fns
7	May 16	?
8	May 23	?
9	May 30	?
10	Jun 6	?
Resources

    C++11 support in gcc
    Matrix of compiler support for many C++11 features
    Scott Meyer's notes on C++11
    Scott Meyer's C++ books
    Wikipedia article on C++11
    Bjarne Stroustrup's FAQ on C++11 

